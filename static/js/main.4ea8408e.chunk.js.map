{"version":3,"sources":["components/Clock/Clock.tsx","components/Clock/index.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","timerId","setTimeout","this","setInterval","date","Date","setState","toLocaleTimeString","console","log","clearInterval","name","props","React","Component","App","clockVisible","clockName","show","document","getElementById","hide","addEventListener","className","type","id","placeholder","ReactDOM","render"],"mappings":"8MAWMA,E,4MACJC,MAAQ,CACNC,YAAa,UACbC,QAASC,YAAW,cAAU,I,uDAGhC,WAAqB,IAAD,OAClBC,KAAKJ,MAAME,QAAUG,aAAY,WAC/B,IAAMC,EAAa,IAAIC,KAEvB,EAAKC,SAAS,CAAEP,YAAaK,EAAKG,uBAElCC,QAAQC,IAAIL,EAAKG,wBAChB,O,kCAGL,WACEG,cAAcR,KAAKJ,MAAME,W,oBAG3B,WACE,IAAQD,EAAgBG,KAAKJ,MAArBC,YACAY,EAAST,KAAKU,MAAdD,KAER,OACE,qCACE,mDAAoBA,KACpB,oDAAqBZ,Y,GA3BTc,IAAMC,WCTXjB,ED0CAA,EEjCTkB,G,kNACJjB,MAAQ,CACNkB,cAAc,EACdC,UAAW,O,uDAGb,WAAqB,IAAD,OACZC,EAAOC,SAASC,eAAe,QAC/BC,EAAOF,SAASC,eAAe,QAErCF,EAAKI,iBAAiB,SAAS,WAC7B,EAAKhB,SAAS,CAAEU,cAAc,OAGhCK,EAAKC,iBAAiB,SAAS,WAC7B,EAAKhB,SAAS,CAAEU,cAAc,S,oBAIlC,WACE,MAAoCd,KAAKJ,MAAjCkB,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UAEtB,OACE,sBAAKM,UAAU,YAAf,UACE,6CACA,oBAAIA,UAAU,eAAd,SACGP,GAAgB,cAAC,EAAD,CAAOL,KAAMM,MAGhC,sBAAKM,UAAU,kBAAf,UACE,wBAAQC,KAAK,SAASC,GAAG,OAAzB,wBACA,wBAAQD,KAAK,SAASC,GAAG,OAAzB,2BAGF,sBAAKF,UAAU,eAAf,UACE,uBAAOC,KAAK,OAAOC,GAAG,YAAYC,YAAY,eAC9C,wBAAQF,KAAK,SAASC,GAAG,UAAzB,2C,GApCQZ,IAAMC,YA2CTC,ICnDfY,IAASC,OACP,cAAC,EAAD,IACAT,SAASC,eAAe,W","file":"static/js/main.4ea8408e.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  currentTime: string,\n  // timerId: ??\n};\n\nclass Clock extends React.Component<Props, State> {\n  state = {\n    currentTime: 'load...',\n    timerId: setTimeout(() => {}, 0),\n  };\n\n  componentDidMount() {\n    this.state.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({ currentTime: date.toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render(): React.ReactNode {\n    const { currentTime } = this.state;\n    const { name } = this.props;\n\n    return (\n      <>\n        <h2>{`Clock name: ${name}`}</h2>\n        <p>{`Current time: ${currentTime}`}</p>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import Clock from './Clock';\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock';\nimport './App.scss';\n\ntype Props = {};\n\ntype State = {\n  clockVisible: boolean,\n  clockName: string,\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    clockVisible: true,\n    clockName: '...',\n  };\n\n  componentDidMount() {\n    const show = document.getElementById('show') as HTMLElement;\n    const hide = document.getElementById('hide') as HTMLElement;\n\n    show.addEventListener('click', () => {\n      this.setState({ clockVisible: true });\n    });\n\n    hide.addEventListener('click', () => {\n      this.setState({ clockVisible: false });\n    });\n  }\n\n  render() {\n    const { clockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App clock\">\n        <h1>React clock</h1>\n        <h2 className=\"clock__block\">\n          {clockVisible && <Clock name={clockName} />}\n        </h2>\n\n        <div className=\"clock__controls\">\n          <button type=\"button\" id=\"show\">Show Clock</button>\n          <button type=\"button\" id=\"hide\">Hide Clock</button>\n        </div>\n\n        <div className=\"clock__input\">\n          <input type=\"text\" id=\"inputName\" placeholder=\"Clock name\" />\n          <button type=\"button\" id=\"setName\">Set new Clocks name</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}